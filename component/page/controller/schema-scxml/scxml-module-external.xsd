<?xml version="1.0" encoding="utf-8" ?>
<!--Created with Liquid XML Studio Developer Edition (Trial) 8.0.1.1926 (http://www.liquid-technologies.com)-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	<xsd:include schemaLocation="scxml-module-core.xsd" />
	<xsd:include schemaLocation="scxml-datatypes.xsd">
		<xsd:annotation>
			<xsd:documentation>
                                This module defines SCXML Attribute DataTypes
                        </xsd:documentation>
		</xsd:annotation>
	</xsd:include>
	<xsd:include schemaLocation="scxml-attribs.xsd">
		<xsd:annotation>
			<xsd:documentation>
                                This module defines Common attributes for SCXML
                        </xsd:documentation>
		</xsd:annotation>
	</xsd:include>
	<xsd:include schemaLocation="scxml-contentmodels.xsd">
		<xsd:annotation>
			<xsd:documentation>
                                This module defines Common content model extensions  for SCXML
                        </xsd:documentation>
		</xsd:annotation>
	</xsd:include>
	<xsd:include schemaLocation="scxml-module-data.xsd">
		<xsd:annotation>
			<xsd:documentation>
                                This includes the data module for SCXML
                    </xsd:documentation>
		</xsd:annotation>
	</xsd:include>
	<xsd:annotation>
		<xsd:documentation>

            This is the XML Schema external module for SCXML
            * send 
            * cancel
            * invoke
            * finalize 
            The external module defines these elements and their
            attributes.

        </xsd:documentation>
		<xsd:documentation source="scxml-copyright.xsd" />
	</xsd:annotation>
	<!-- send -->
	<xsd:attributeGroup name="scxml.send.attlist">
		<xsd:attribute name="event" type="xsd:string" />
		<xsd:attribute name="eventexpr" type="ValueLang.datatype" />
		<xsd:attribute name="target" type="xsd:string" />
		<xsd:attribute name="targetexpr" type="ValueLang.datatype" />
		<xsd:attribute default="scxml" name="type" type="xsd:string" />
		<xsd:attribute name="typeexpr" type="ValueLang.datatype" />
		<xsd:attribute name="id" type="xsd:NMTOKEN" />
		<xsd:attribute name="idlocation" type="LocLang.datatype" />
		<xsd:attribute default="0s" name="delay" type="xsd:string" />
		<xsd:attribute name="delayexpr" type="ValueLang.datatype" />
		<xsd:attribute name="namelist" type="xsd:string" />
		<xsd:attribute name="hints" type="xsd:string" />
		<xsd:attribute name="hintsexpr" type="ValueLang.datatype" />
		<xsd:attributeGroup ref="scxml.extra.attribs" />
	</xsd:attributeGroup>
	<xsd:group name="scxml.send.mix">
		<xsd:choice>
			<xsd:element minOccurs="0" maxOccurs="1" ref="content" />
			<xsd:group minOccurs="0" maxOccurs="unbounded" ref="scxml.extra.content" />
			<xsd:element xmlns:q1="http://www.w3.org/2005/07/scxml" minOccurs="0" maxOccurs="unbounded" ref="q1:param" />
		</xsd:choice>
	</xsd:group>
	<xsd:group name="scxml.send.content">
		<xsd:sequence>
			<xsd:group minOccurs="0" maxOccurs="unbounded" ref="scxml.send.mix" />
		</xsd:sequence>
	</xsd:group>
	<xsd:complexType name="scxml.send.type">
		<xsd:group ref="scxml.send.content" />
		<xsd:attributeGroup ref="scxml.send.attlist" />
	</xsd:complexType>
	<xsd:element name="send" type="scxml.send.type" />
	<!-- invoke -->
	<xsd:attributeGroup name="scxml.invoke.attlist">
		<xsd:attribute default="scxml" name="type" type="xsd:NMTOKEN" />
		<xsd:attribute name="typeexpr" type="ValueLang.datatype" />
		<xsd:attribute name="src" type="URI.datatype" />
		<xsd:attribute name="srcexpr" type="ValueLang.datatype" />
		<xsd:attribute name="id" type="xsd:NMTOKEN" />
		<xsd:attribute name="idlocation" type="LocLang.datatype" />
		<xsd:attribute name="namelist" type="xsd:string" />
		<xsd:attribute default="false" name="autoforward" type="Boolean.datatype" use="optional" />
		<xsd:attributeGroup ref="scxml.extra.attribs" />
	</xsd:attributeGroup>
	<xsd:group name="scxml.invoke.mix">
		<xsd:choice>
			<xsd:element minOccurs="0" maxOccurs="1" ref="finalize" />
			<xsd:element minOccurs="0" maxOccurs="1" ref="content" />
			<xsd:group minOccurs="0" maxOccurs="unbounded" ref="scxml.extra.content" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" ref="param" />
		</xsd:choice>
	</xsd:group>
	<xsd:group name="scxml.invoke.content">
		<xsd:sequence>
			<xsd:group minOccurs="0" maxOccurs="unbounded" ref="scxml.invoke.mix" />
		</xsd:sequence>
	</xsd:group>
	<xsd:complexType name="scxml.invoke.type">
		<xsd:group ref="scxml.invoke.content" />
		<xsd:attributeGroup ref="scxml.invoke.attlist" />
	</xsd:complexType>
	<xsd:element name="invoke" type="scxml.invoke.type" />
	<!-- finalize -->
	<xsd:attributeGroup name="scxml.finalize.attlist">
		<xsd:attributeGroup ref="scxml.extra.attribs" />
	</xsd:attributeGroup>
	<xsd:group name="scxml.finalize.mix">
		<xsd:choice>
			<xsd:group ref="scxml.core.executablecontent" />
		</xsd:choice>
	</xsd:group>
	<xsd:group name="scxml.finalize.content">
		<xsd:sequence>
			<xsd:group minOccurs="0" maxOccurs="unbounded" ref="scxml.finalize.mix" />
		</xsd:sequence>
	</xsd:group>
	<xsd:complexType name="scxml.finalize.type">
		<xsd:group ref="scxml.finalize.content" />
		<xsd:attributeGroup ref="scxml.finalize.attlist" />
	</xsd:complexType>
	<xsd:element name="finalize" type="scxml.finalize.type" />
	<!-- cancel -->
	<xsd:attributeGroup name="scxml.cancel.attlist">
		<xsd:attribute name="sendid" type="xsd:NMTOKEN" />
		<xsd:attribute name="sendidexpr" type="ValueLang.datatype" />
		<xsd:attributeGroup ref="scxml.extra.attribs" />
	</xsd:attributeGroup>
	<xsd:group name="scxml.cancel.content">
		<xsd:sequence>
			<xsd:group minOccurs="0" maxOccurs="unbounded" ref="scxml.extra.content" />
		</xsd:sequence>
	</xsd:group>
	<xsd:complexType name="scxml.cancel.type">
		<xsd:group ref="scxml.cancel.content" />
		<xsd:attributeGroup ref="scxml.cancel.attlist" />
	</xsd:complexType>
	<xsd:element name="cancel" type="scxml.cancel.type" />
</xsd:schema>
